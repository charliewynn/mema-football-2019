{"version":3,"sources":["Components/GameCard.js","Components/PlayerCard.js","Components/PredictionsTable.js","Components/Home.js","Components/Scores.js","Components/Players.js","Components/Player.js","Actions/Types.js","Actions/ScoresActions.js","App.js","Actions/PlayersActions.js","serviceWorker.js","Reducers/OutcomeReducer.js","Reducers/RootReducer.js","Reducers/ScoresReducer.js","Reducers/PlayersReducer.js","Store.js","index.js"],"names":["GameCard","_ref","game","showBonusWinners","bonusWinnerText","changeSelectedGame","selected","react_default","a","createElement","className","onClick","e","stopPropagation","nativeEvent","stopImmediatePropagation","home","team","date","complete","Fragment","ouWon","ouScore","oppScore","Object","toConsumableArray","Set","concat","closestOu","closestOpp","join","window","open","espnGameId","PlayerCard","player","guessedWinner","earnedBonusOU","earnedBonusOpp","selectedGameTeam","classes","points","react_router_dom","to","name","totalScore","PredictionsTable","players","games","align","GetTableHeaders","GetPlayerPredictions","map","g","key","p","MOST","KSU","ISU","TEX","TCU","TTU","KU","OKST","WVU","BAY","connect","state","Scores","Players","Outcome","Config","debug","_useState","useState","showTable","_useState2","slicedToArray","showScoresTable","showHideScores","_useState3","_useState4","selectedGame","console","log","id","dangerouslySetInnerHTML","__html","announcement","outcome","scores","length","Components_GameCard","Components_PlayerCard","includes","JSON","stringify","loading","match","playerName","params","filter","toLowerCase","START_LOAD_SCORES","SCORES_LOADED","SCORES_ERROR","START_LOAD_PLAYERS","PLAYERS_LOADED","ScoresLoadingError","error","type","undefined","dispatch","LoadScores","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","GameData","stop","_x","apply","this","arguments","LoadPlayers","PlayerData","useEffect","basename","process","react_router","exact","path","component","HomeComponent","PlayersComponent","PlayerComponent","ScoresComponent","render","Boolean","location","hostname","computeIfReady","loadingPlayers","loadingScores","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","gameScores","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","closest","ou","opp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_p$_g$id$split","split","_p$_g$id$split2","p_ou","p_opp","parseInt","Math","abs","min","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","eligibleForClosest","push","sort","b","objectSpread","combineReducers","action","initialState","urlParams","URLSearchParams","search","configIndex","has","config","configs","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d94774a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction GameCard({\r\n  game,\r\n  showBonusWinners,\r\n  bonusWinnerText,\r\n  changeSelectedGame,\r\n  selected\r\n}) {\r\n  return (\r\n    <div\r\n      className={(selected ? \"selected \" : \"\") + \"game\"}\r\n      onClick={e => {\r\n        e.stopPropagation();\r\n        e.nativeEvent.stopImmediatePropagation();\r\n        changeSelectedGame(game);\r\n      }}\r\n    >\r\n      <div className=\"title\">\r\n        <strong>\r\n          OU\r\n          {game.home ? \" vs \" : \" @ \"}\r\n          {game.team}\r\n        </strong>\r\n      </div>\r\n      <div>{game.date}</div>\r\n      {game.complete && (\r\n        <>\r\n          <div>OU {game.ouWon ? \"won\" : \"lost\"}</div>\r\n          <div>\r\n            {game.ouScore} to {game.oppScore}\r\n          </div>\r\n          {showBonusWinners && (\r\n            <div>\r\n              {bonusWinnerText}\r\n              {[...new Set([...game.closestOu, ...game.closestOpp])].join(\" \")}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      <button\r\n        className=\"smallButton button1\"\r\n        onClick={() =>\r\n          window.open(\r\n            \"https://www.espn.com/college-football/game/_/gameId/\" +\r\n              game.espnGameId\r\n          )\r\n        }\r\n      >\r\n        ESPN\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameCard;\r\n\r\n//urls\r\n//Houston: https://www.espn.com/college-football/game/_/gameId/401112114\r\n//SDAK: https://www.espn.com/college-football/game/_/gameId/401112115\r\n//UCLA: https://www.espn.com/college-football/game/_/gameId/401112116\r\n//TTU: https://www.espn.com/college-football/game/_/gameId/401112117\r\n//KU: https://www.espn.com/college-football/game/_/gameId/401112101\r\n//TEX: https://www.espn.com/college-football/game/_/gameId/401112118\r\n//WVU: https://www.espn.com/college-football/game/_/gameId/401112119\r\n//KSU: https://www.espn.com/college-football/game/_/gameId/401112110\r\n//ISU: https://www.espn.com/college-football/game/_/gameId/401112092\r\n//BAY: https://www.espn.com/college-football/game/_/gameId/401112082\r\n//TCU: https://www.espn.com/college-football/game/_/gameId/401112120\r\n//OKST: https://www.espn.com/college-football/game/_/gameId/401112121\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PlayerCard({\r\n  player,\r\n  guessedWinner,\r\n  earnedBonusOU,\r\n  earnedBonusOpp,\r\n  selectedGameTeam\r\n}) {\r\n  let classes = \"player\";\r\n  let points = 0;\r\n  if (guessedWinner) {\r\n    classes += \" guessedWinner\";\r\n    points++;\r\n  }\r\n  if (earnedBonusOU) {\r\n    classes += \" earnedBonus\";\r\n    points++;\r\n  }\r\n  if (earnedBonusOpp) {\r\n    classes += \" earnedBonus\";\r\n    points++;\r\n  }\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"title\">\r\n        <Link to={\"/players/\" + player.name}>{player.name}</Link>\r\n      </div>\r\n      <div>\r\n        Total Points:\r\n        {player.totalScore}\r\n      </div>\r\n      {selectedGameTeam && points ? (\r\n        <div>\r\n          {points} for OU vs {selectedGameTeam}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\n\r\nexport default ({ players, games }) => (\r\n  <table align=\"center\">\r\n    <thead>{GetTableHeaders(games)}</thead>\r\n    <tbody>{GetPlayerPredictions(players)}</tbody>\r\n  </table>\r\n);\r\n\r\nconst GetTableHeaders = (games) => (\r\n  <tr>\r\n    <th>Player</th>\r\n    {games.map((g) => (\r\n      <th key={g.team}>{g.team}</th>\r\n    ))}\r\n  </tr>\r\n);\r\n\r\nconst GetPlayerPredictions = (players) =>\r\n  players.map((p) => (\r\n    <tr key={p.name}>\r\n      <td>{p.name}</td>\r\n      <td>{p.MOST}</td>\r\n      <td>{p.KSU}</td>\r\n      <td>{p.ISU}</td>\r\n      <td>{p.TEX}</td>\r\n      <td>{p.TCU}</td>\r\n      <td>{p.TTU}</td>\r\n      <td>{p.KU}</td>\r\n      <td>{p.OKST}</td>\r\n      <td>{p.WVU}</td>\r\n      <td>{p.BAY}</td>\r\n    </tr>\r\n  ));\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GameCard from \"./GameCard\";\r\nimport PlayerCard from \"./PlayerCard\";\r\nimport PredictionsTable from \"./PredictionsTable\";\r\n\r\nfunction Home({ Outcome, Config }) {\r\n  if (Config.debug) {\r\n    //console.log(\"Loading Home in debug mode\");\r\n  }\r\n  const [showScoresTable, showHideScores] = useState(Config.showTable);\r\n  const [selectedGame, changeSelectedGame] = useState(null);\r\n\r\n  console.log(\"Outcome\", Outcome);\r\n  return (\r\n    <div\r\n      id=\"HomeDiv\"\r\n      onClick={() => {\r\n        changeSelectedGame(null);\r\n      }}\r\n    >\r\n      <div dangerouslySetInnerHTML={{ __html: Config.announcement }}></div>\r\n      {Outcome.outcome.scores.length === 0 && <div>Loading</div>}\r\n      <div id=\"GamesDiv\">\r\n        {Outcome.outcome.scores.map((game) => (\r\n          <GameCard\r\n            selected={game === selectedGame}\r\n            key={game.id}\r\n            changeSelectedGame={(game) => {\r\n              game === selectedGame\r\n                ? changeSelectedGame(null)\r\n                : changeSelectedGame(game);\r\n            }}\r\n            bonusWinnerText={Config.bonusWinnerText}\r\n            showBonusWinners={Config.showBonusWinners}\r\n            game={game}\r\n          ></GameCard>\r\n        ))}\r\n      </div>\r\n      {selectedGame && (\r\n        <div id=\"key\">\r\n          <div>\r\n            <span id=\"extra-point-key\" className=\"key\"></span>Extra Point\r\n          </div>\r\n          <div>\r\n            <span id=\"correct-guess-key\" className=\"key\"></span>Correct Guess\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div id=\"PlayersDiv\">\r\n        {Outcome.outcome.players.map((player) => (\r\n          <PlayerCard\r\n            selectedGameTeam={selectedGame && selectedGame.team}\r\n            guessedWinner={\r\n              selectedGame && selectedGame.guessedWinner.includes(player.name)\r\n            }\r\n            earnedBonusOpp={\r\n              selectedGame && selectedGame.closestOpp.includes(player.name)\r\n            }\r\n            earnedBonusOU={\r\n              selectedGame && selectedGame.closestOu.includes(player.name)\r\n            }\r\n            key={player.name}\r\n            player={player}\r\n          ></PlayerCard>\r\n        ))}\r\n      </div>\r\n\r\n      {Outcome.outcome.scores.length > 0 && (\r\n        <button\r\n          className=\"largeButton button2\"\r\n          onClick={() => showHideScores(!showScoresTable)}\r\n        >\r\n          {showScoresTable ? \"Hide\" : \"Show\"} Scores Table\r\n        </button>\r\n      )}\r\n      {Outcome.outcome.scores.length > 0 && showScoresTable && (\r\n        <div id=\"ScoresDiv\">\r\n          <PredictionsTable\r\n            players={Outcome.outcome.players}\r\n            games={Outcome.outcome.scores}\r\n          ></PredictionsTable>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players,\r\n  Outcome: state.Outcome,\r\n  Config: state.Config,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Scores({Scores}){\r\n    return (<div>scores page<div>{JSON.stringify(Scores)}</div></div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Scores);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Players({Players}){\r\n\r\n  if(Players.loading) return (<div>Loading...</div>);\r\n\r\n  return (\r\n    <div>\r\n      {Players.players.map(p=>(\r\n        <div><Link to={\"/players/\"+p.name}>{p.name}</Link></div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Players);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Player({ Players, Scores, match }) {\r\n  if (Players.loading) return <div>Loading...</div>;\r\n\r\n  const playerName = match.params.name;\r\n  const player = Players.players.filter(\r\n    p => p.name.toLowerCase() === playerName.toLowerCase()\r\n  );\r\n  if (!player.length) {\r\n    return (\r\n      <div>\r\n        Could not find: {playerName}{\" \"}\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Here are {playerName}'s scores</h1>\r\n      {Scores.scores && (\r\n        <div className=\"scores\">\r\n          {Scores.scores.map(g => (\r\n            <div className=\"score\">\r\n              <div>{g.team}</div>\r\n              <div>{player[0][g.id]}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <Link to=\"/\">Back to all Players</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","export const START_LOAD_SCORES = \"START_LOAD_SCORES\";\r\nexport const SCORES_LOADED = \"SCORES_LOADED\";\r\nexport const SCORES_ERROR = \"SCORES_ERROR\";\r\n\r\nexport const START_LOAD_PLAYERS = \"START_LOAD_PLAYERS\";\r\nexport const PLAYERS_LOADED = \"PLAYERS_LOADED\";\r\n","import { START_LOAD_SCORES, SCORES_LOADED, SCORES_ERROR } from \"./Types\";\r\nimport GameData from \"../data/games.json\";\r\n\r\n//const scoresURL = \"https://api.sheety.co/63dbeee0-3aa4-4e79-ac39-545ac3ee7b86\";\r\n\r\nexport const StartLoadScores = () => ({\r\n  type: START_LOAD_SCORES,\r\n});\r\n\r\nexport const ScoresLoaded = (scores) => ({\r\n  type: SCORES_LOADED,\r\n  scores,\r\n});\r\n\r\nexport const ScoresLoadingError = (error) => ({\r\n  type: SCORES_ERROR,\r\n  error,\r\n});\r\n\r\nexport const LoadScoresAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch(StartLoadScores());\r\n    try {\r\n      //const response = await fetch(scoresURL);\r\n      //const json = await response.json();\r\n      dispatch(ScoresLoaded(GameData.scores));\r\n    } catch (error) {\r\n      console.log(\"Error loading scores\", error);\r\n      dispatch(ScoresLoadingError(error));\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport HomeComponent from \"./Components/Home\";\r\nimport ScoresComponent from \"./Components/Scores\";\r\nimport PlayersComponent from \"./Components/Players\";\r\nimport PlayerComponent from \"./Components/Player\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadScoresAction } from \"./Actions/ScoresActions\";\r\nimport { LoadPlayersAction } from \"./Actions/PlayersActions\";\r\n\r\nfunction App({ LoadScores, LoadPlayers }) {\r\n  useEffect(() => {\r\n    LoadScores();\r\n    LoadPlayers();\r\n  }, [LoadScores, LoadPlayers]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <header className=\"App-header\">\r\n          <Link className=\"HeaderLink\" to=\"/\">\r\n            Mema Football Pool 2020\r\n          </Link>\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeComponent} />\r\n          <Route exact path=\"/players\" component={PlayersComponent} />\r\n          <Route exact path=\"/players/:name\" component={PlayerComponent} />\r\n          <Route exact path=\"/scores\" component={ScoresComponent} />\r\n          <Route\r\n            render={() => (\r\n              <div>\r\n                404\r\n                <div>\r\n                  <Link to=\"/\">Go Home</Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    LoadScores: () => dispatch(LoadScoresAction()),\r\n    LoadPlayers: () => dispatch(LoadPlayersAction()),\r\n  };\r\n};\r\nexport default connect(undefined, mapDispatchToProps)(App);\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"./Types\";\r\nimport PlayerData from \"../data/players.json\";\r\n\r\n//const scoresURL = \"https://api.sheety.co/d50d6864-69d7-46b3-b39d-a4ea29480254\";\r\n\r\nexport const StartLoadPlayers = () => ({\r\n  type: START_LOAD_PLAYERS,\r\n});\r\n\r\nexport const PlayersLoaded = (players) => ({\r\n  type: PLAYERS_LOADED,\r\n  players,\r\n});\r\n\r\nexport const LoadPlayersAction = () => {\r\n  return async (dispatch) => {\r\n    dispatch(StartLoadPlayers());\r\n    //const response = await fetch(scoresURL);\r\n    //const json = await response.json();\r\n\r\n    dispatch(PlayersLoaded(PlayerData.players));\r\n  };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SCORES_LOADED,\r\n  PLAYERS_LOADED,\r\n  START_LOAD_PLAYERS,\r\n  START_LOAD_SCORES,\r\n} from \"../Actions/Types\";\r\n\r\nexport default function OutcomeReducer(\r\n  state = {\r\n    loadingPlayers: true,\r\n    outcome: { scores: [], players: [] },\r\n    loadingScores: true,\r\n  },\r\n  action\r\n) {\r\n  console.log(\"Outcome Reducer\", action);\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return { ...state, loadingPlayers: true };\r\n    case START_LOAD_SCORES:\r\n      return { ...state, loadingScores: true };\r\n    case SCORES_LOADED:\r\n      state = {\r\n        ...state,\r\n        scores: action.scores,\r\n        loadingScores: false,\r\n      };\r\n      console.log(\"Outcome scores\", action.scores);\r\n      return computeIfReady(state, action);\r\n    case PLAYERS_LOADED:\r\n      state = {\r\n        ...state,\r\n        players: action.players,\r\n        loadingPlayers: false,\r\n      };\r\n      console.log(\"Outcome players\", action.players);\r\n\r\n      return computeIfReady(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst computeIfReady = (state) => {\r\n  if (state.loadingPlayers || state.loadingScores) return state;\r\n\r\n  const { players, scores } = state;\r\n\r\n  for (let p of players) {\r\n    p.gameScores = {};\r\n    p.totalScore = 0;\r\n  }\r\n\r\n  for (let g of scores) {\r\n    g.guessedWinner = [];\r\n    g.closestOu = [];\r\n    g.closestOpp = [];\r\n  }\r\n  console.log(\"Calculating\", players, scores);\r\n  for (let g of scores.filter((g) => g.complete)) {\r\n    let closest = { ou: 100, opp: 100 };\r\n    g.ouWon = g.ouScore > g.oppScore;\r\n    for (let p of players) {\r\n      p.gameScores[g.id] = 0;\r\n      let [p_ou, p_opp] = p[g.id].split(\"-\");\r\n      p.ouWon = parseInt(p_ou) > parseInt(p_opp);\r\n      p.ou = Math.abs(g.ouScore - p_ou);\r\n      p.opp = Math.abs(g.oppScore - p_opp);\r\n      if (g.ouWon === p.ouWon) {\r\n        closest.ou = Math.min(closest.ou, p.ou);\r\n        closest.opp = Math.min(closest.opp, p.opp);\r\n      }\r\n      //console.log(p.name, p.ou, p.opp, g.id, g.team);\r\n    }\r\n    for (let p of players) {\r\n      let eligibleForClosest = false;\r\n      if (p.ouWon === g.ouWon) {\r\n        eligibleForClosest = true;\r\n        g.guessedWinner.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.ou === closest.ou) {\r\n        g.closestOu.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.opp === closest.opp) {\r\n        g.closestOpp.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      p.totalScore += p.gameScores[g.id];\r\n    }\r\n  }\r\n  players.sort((a, b) => b.totalScore - a.totalScore);\r\n  return { ...state, outcome: { scores, players } };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport Scores from \"./ScoresReducer\";\r\nimport Players from \"./PlayersReducer\";\r\nimport Outcome from \"./OutcomeReducer\";\r\n\r\nconst Config = (state = {}) => state;\r\nexport default combineReducers({ Scores, Players, Outcome, Config });\r\n","import {\r\n  START_LOAD_SCORES,\r\n  SCORES_LOADED,\r\n  SCORES_ERROR\r\n} from \"../Actions/Types\";\r\n\r\nexport default function ScoresReducer(\r\n  state = { scores: [], loading: false },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_SCORES:\r\n      return { loading: true };\r\n    case SCORES_LOADED:\r\n      return { scores: action.scores, loading: false };\r\n    case SCORES_ERROR:\r\n      return { loading: false, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"../Actions/Types\";\r\n\r\nexport default function PlayersReducer(\r\n  state = { players: [], loading: false },\r\n  action\r\n) {\r\n  //console.log(\"PlayersReducer\", action);\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return { loading: true };\r\n    case PLAYERS_LOADED:\r\n      console.log(\"Loaded Players\", action.players);\r\n      return { players: action.players, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function configureStore(config) {\r\n  initialState.Config = config;\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport configureStore from \"./Store\";\r\nimport { Provider } from \"react-redux\";\r\nimport Config from \"./data/config.json\";\r\n\r\n//const url = \"https://api.sheety.co/85d08bfc-d77b-42a5-9d36-50c7aef7dc35\";\r\n\r\n//fetch(url)\r\n//.then(resp => resp.json())\r\n//.then(config => {\r\nconst urlParams = new URLSearchParams(window.location.search);\r\nconst configIndex = urlParams.has(\"debug\") ? 1 : 0;\r\nconsole.log(\"configIndex\", configIndex);\r\nconst config = Config.configs[configIndex];\r\nconfig.debug = urlParams.has(\"debug\");\r\n\r\nconsole.log(config);\r\nReactDOM.render(\r\n  <Provider store={configureStore(config)}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n// });\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
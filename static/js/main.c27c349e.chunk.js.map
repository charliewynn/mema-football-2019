{"version":3,"sources":["Components/GameCard.js","Components/PlayerCard.js","Components/PredictionsTable.js","Components/Home.js","Components/Scores.js","Components/Players.js","Components/Player.js","Actions/Types.js","App.js","Actions/ScoresActions.js","Actions/PlayersActions.js","serviceWorker.js","Reducers/OutcomeReducer.js","Reducers/RootReducer.js","Reducers/ScoresReducer.js","Reducers/PlayersReducer.js","Store.js","index.js"],"names":["GameCard","_ref","game","react_default","a","createElement","className","home","team","date","complete","Fragment","ouWon","ouScore","oppScore","class","onClick","window","open","espnGameId","PlayerCard","player","playerClicked","name","totalScore","PredictionsTable","players","games","id","GetTableHeaders","GetPlayerPredictions","map","g","p","houston","southDakota","ucla","texasTech","kansas","texas","westVirginia","kansasState","iowaState","baylor","tcu","osu","connect","state","Scores","Players","Outcome","alert","JSON","stringify","outcome","scores","Components_GameCard","key","Components_PlayerCard","x","document","getElementById","classList","contains","remove","add","showHideScores","loading","react_router_dom","to","match","playerName","params","filter","toLowerCase","length","START_LOAD_SCORES","SCORES_LOADED","SCORES_ERROR","START_LOAD_PLAYERS","PLAYERS_LOADED","undefined","dispatch","LoadScores","Object","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","type","fetch","sent","t0","error","stop","_x","apply","this","arguments","LoadPlayers","useEffect","basename","process","react_router","exact","path","component","HomeComponent","PlayersComponent","PlayerComponent","ScoresComponent","render","Boolean","location","hostname","computeIfReady","loadingPlayers","loadingScores","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","gameScores","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","guessedWinner","closestOu","closestOpp","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","closest","ou","opp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_p$_g$id$split","split","_p$_g$id$split2","slicedToArray","p_ou","p_opp","parseInt","Math","abs","min","console","log","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","eligibleForClosest","push","objectSpread","combineReducers","action","initialState","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wPAyCeA,MAvCf,SAAAC,GAA4B,IAARC,EAAQD,EAARC,KAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,mBAEGH,EAAKK,KAAO,OAAS,MACrBL,EAAKM,OAGVL,EAAAC,EAAAC,cAAA,WAAMH,EAAKO,MAETP,EAAKQ,SAEHP,EAAAC,EAAAC,cAAAF,EAAAC,EAAAO,SAAA,KACER,EAAAC,EAAAC,cAAA,iBAASH,EAAKU,MAAQ,MAAQ,QAC9BT,EAAAC,EAAAC,cAAA,WACGH,EAAKW,QADR,OACqBX,EAAKY,WAM5BX,EAAAC,EAAAC,cAAAF,EAAAC,EAAAO,SAAA,KACAR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAINF,EAAAC,EAAAC,cAAA,UAAQU,MAAM,sBAAsBC,QAAS,kBACzCC,OAAOC,KACL,uDACEhB,EAAKiB,cAHb,UCfWC,MAdf,SAAAnB,GAA+C,IAAzBoB,EAAyBpB,EAAzBoB,OAAQC,EAAiBrB,EAAjBqB,cAC5B,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASU,QAAS,kBAAMM,EAAcD,KACnDlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,cAASgB,EAAOE,OAElBpB,EAAAC,EAAAC,cAAA,qBAEGgB,EAAOG,cCRDC,EAAA,SAAAxB,GAAA,IAAGyB,EAAHzB,EAAGyB,QAASC,EAAZ1B,EAAY0B,MAAZ,OACbxB,EAAAC,EAAAC,cAAA,SAAOuB,GAAG,cAAcb,MAAM,UAC3Bc,EAAgBF,GAChBG,EAAqBJ,KAIpBG,EAAkB,SAAAF,GAAK,OAC3BxB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACCsB,EAAMI,IAAI,SAAAC,GAAC,OACV7B,EAAAC,EAAAC,cAAA,UAAK2B,EAAExB,UAKPsB,EAAuB,SAAAJ,GAAO,OAClCA,EAAQK,IAAI,SAAAE,GAAC,OACX9B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK4B,EAAEV,MACPpB,EAAAC,EAAAC,cAAA,UAAK4B,EAAEC,SACP/B,EAAAC,EAAAC,cAAA,UAAK4B,EAAEE,aACPhC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEG,MACPjC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEI,WACPlC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEK,QACPnC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEM,OACPpC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEO,cACPrC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEQ,aACPtC,EAAAC,EAAAC,cAAA,UAAK4B,EAAES,WACPvC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEU,QACPxC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEW,KACPzC,EAAAC,EAAAC,cAAA,UAAK4B,EAAEY,SCiBb,IAMeC,cANS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAMC,OACdC,QAASF,EAAME,QACfC,QAASH,EAAMG,UAGFJ,CAjDf,SAAA7C,GAA2B,IAAXiD,EAAWjD,EAAXiD,QACR5B,EAAgB,SAAAD,GACpB8B,MAAMC,KAAKC,UAAUhC,KAEvB,OACElB,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,WACNzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,YACLsB,EAAQI,QAAQC,OAAOxB,IAAI,SAAA7B,GAAI,OAC9BC,EAAAC,EAAAC,cAACmD,EAAD,CAAUC,IAAKvD,EAAK0B,GAAI1B,KAAMA,OAGlCC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,cACLsB,EAAQI,QAAQ5B,QAAQK,IAAI,SAAAV,GAAM,OACjClB,EAAAC,EAAAC,cAACqD,EAAD,CACEpC,cAAeA,EACfmC,IAAKpC,EAAOE,KACZF,OAAQA,OAIdlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQU,MAAM,sBAAsBC,QAAS,kBAUnD,WAEE,IAAI2C,EAAIC,SAASC,eAAe,eAC5BF,EAAEG,UAAUC,SAAS,UACvBJ,EAAEG,UAAUE,OAAO,UAEnBL,EAAEG,UAAUG,IAAI,UAhBqCC,KAAnD,oBACA/D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKuB,GAAG,aACNzB,EAAAC,EAAAC,cAACoB,EAAD,CAAkBC,QAASwB,EAAQI,QAAQ5B,QAASC,MAAOuB,EAAQI,QAAQC,aC3BnF,IAKeT,cALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAMC,OACdC,QAASF,EAAME,UAGFH,CATf,SAAA7C,GAAyB,IAAR+C,EAAQ/C,EAAR+C,OACb,OAAQ7C,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,WAAM+C,KAAKC,UAAUL,OCajD,IAKeF,cALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAMC,OACdC,QAASF,EAAME,UAGFH,CAlBf,SAAA7C,GAA2B,IAATgD,EAAShD,EAATgD,QAEhB,OAAGA,EAAQkB,QAAiBhE,EAAAC,EAAAC,cAAA,yBAG1BF,EAAAC,EAAAC,cAAA,WACG4C,EAAQvB,QAAQK,IAAI,SAAAE,GAAC,OACpB9B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAI,YAAYpC,EAAEV,MAAOU,EAAEV,YCkB9C,IAKeuB,cALS,SAAAC,GAAK,MAAK,CAChCC,OAAQD,EAAMC,OACdC,QAASF,EAAME,UAGFH,CA9Bf,SAAA7C,GAAoC,IAAlBgD,EAAkBhD,EAAlBgD,QAASqB,EAASrE,EAATqE,MACzB,GAAIrB,EAAQkB,QAAS,OAAOhE,EAAAC,EAAAC,cAAA,yBAE5B,IAAMkE,EAAaD,EAAME,OAAOjD,KAC1BF,EAAS4B,EAAQvB,QAAQ+C,OAC7B,SAAAxC,GAAC,OAAIA,EAAEV,KAAKmD,gBAAkBH,EAAWG,gBAE3C,OAAKrD,EAAOsD,OASVxE,EAAAC,EAAAC,cAAA,oBACSkE,EADT,2BAC6CnB,KAAKC,UAAUhC,GAC1DlB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,YAAT,yBAVFlE,EAAAC,EAAAC,cAAA,8BACmBkE,EAAY,IAC7BpE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,YAAT,mDCfKO,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAe,eAEfC,EAAqB,qBACrBC,EAAiB,iBCyC9B,IAMelC,mBACbmC,EAPyB,SAAAC,GACzB,MAAO,CACLC,WAAY,kBAAMD,EC7BpB,eAAAjF,EAAAmF,OAAAC,EAAA,EAAAD,CAAAE,EAAAlF,EAAAmF,KAAO,SAAAC,EAAMN,GAAN,IAAAO,EAAAC,EAAA,OAAAJ,EAAAlF,EAAAuF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLZ,EAhBkC,CACpCa,KAAMnB,IAcCgB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGoBE,MApBX,8DAiBT,cAGGP,EAHHG,EAAAK,KAAAL,EAAAE,KAAA,EAIgBL,EAASC,OAJzB,OAIGA,EAJHE,EAAAK,KAKHf,EAhBiC,CACrCa,KAAMlB,EACNtB,OAc0BmC,IALnBE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAOHV,GAb4BiB,EAaDP,EAAAM,GAbW,CAC1CH,KAAMjB,EACNqB,WAIO,yBAAAP,EAAAQ,OANyB,IAAAD,GAMzBX,EAAA,kBAAP,gBAAAa,GAAA,OAAApG,EAAAqG,MAAAC,KAAAC,YAAA,KD8BEC,YAAa,kBAAMvB,EEnCnB,eAAAjF,EAAAmF,OAAAC,EAAA,EAAAD,CAAAE,EAAAlF,EAAAmF,KAAO,SAAAC,EAAON,GAAP,IAAAO,EAAAC,EAAA,OAAAJ,EAAAlF,EAAAuF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHZ,EAX6B,CACjCa,KAAKhB,IASEa,EAAAE,KAAA,EAEoBE,MAdb,8DAYP,cAEGP,EAFHG,EAAAK,KAAAL,EAAAE,KAAA,EAGgBL,EAASC,OAHzB,OAGGA,EAHHE,EAAAK,KAIHf,EAViC,CACrCa,KAAKf,EACLtD,QAQ2BgE,IAJpB,wBAAAE,EAAAQ,SAAAZ,MAAP,gBAAAa,GAAA,OAAApG,EAAAqG,MAAAC,KAAAC,YAAA,OFsCW1D,CAzCf,SAAA7C,GAA0C,IAA3BkF,EAA2BlF,EAA3BkF,WAAYsB,EAAexG,EAAfwG,YAMzB,OALAC,oBAAU,WACRvB,IACAsB,KACC,CAACtB,EAAYsB,IAGdtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAeuC,SAAUC,uBACvBzG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAM9D,UAAU,aAAa+D,GAAG,KAAhC,4BAIFlE,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC9G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWE,IACxC/G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAWG,IAC9ChH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWI,IACvCjH,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CACEQ,OAAQ,kBACNlH,EAAAC,EAAAC,cAAA,iBAEEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,GAAG,KAAT,qBGvBEiD,QACW,cAA7BrG,OAAOsG,SAASC,UAEe,UAA7BvG,OAAOsG,SAASC,UAEhBvG,OAAOsG,SAASC,SAASlD,MACvB,mGCqBN,IAAMmD,EAAiB,SAAA1E,GACrB,GAAIA,EAAM2E,gBAAkB3E,EAAM4E,cAAe,OAAO5E,EAD1B,IAGtBrB,EAAoBqB,EAApBrB,QAAS6B,EAAWR,EAAXQ,OAHaqE,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IAK9B,QAAA8C,EAAAC,EAActG,EAAduG,OAAAC,cAAAN,GAAAG,EAAAC,EAAAlC,QAAAqC,MAAAP,GAAA,EAAuB,KAAd3F,EAAc8F,EAAAK,MACrBnG,EAAEoG,WAAa,GACfpG,EAAET,WAAa,GAPa,MAAA8G,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAAA,IAAAU,GAAA,EAAAC,GAAA,EAAAC,OAAAzD,EAAA,IAU9B,QAAA0D,EAAAC,EAAcrF,EAAd0E,OAAAC,cAAAM,GAAAG,EAAAC,EAAA9C,QAAAqC,MAAAK,GAAA,EAAsB,KAAbxG,EAAa2G,EAAAP,MACpBpG,EAAE6G,cAAgB,GAClB7G,EAAE8G,UAAY,GACd9G,EAAE+G,WAAa,IAba,MAAAT,GAAAG,GAAA,EAAAC,EAAAJ,EAAA,YAAAE,GAAA,MAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,MAAAC,GAAA,IAAAM,GAAA,EAAAC,GAAA,EAAAC,OAAAjE,EAAA,IAe9B,QAAAkE,EAAAC,EAAc7F,EAAOkB,OAAO,SAAAzC,GAAC,OAAIA,EAAEtB,WAAnCuH,OAAAC,cAAAc,GAAAG,EAAAC,EAAAtD,QAAAqC,MAAAa,GAAA,EAA8C,KAArChH,EAAqCmH,EAAAf,MACxCiB,EAAU,CAAEC,GAAI,IAAKC,IAAK,KAC9BvH,EAAEpB,MAAQoB,EAAEnB,QAAUmB,EAAElB,SAFoB,IAAA0I,GAAA,EAAAC,GAAA,EAAAC,OAAAzE,EAAA,IAG5C,QAAA0E,EAAAC,EAAclI,EAAduG,OAAAC,cAAAsB,GAAAG,EAAAC,EAAA9D,QAAAqC,MAAAqB,GAAA,EAAuB,KAAdvH,EAAc0H,EAAAvB,MACrBnG,EAAEoG,WAAWrG,EAAEJ,IAAM,EADA,IAAAiI,EAED5H,EAAED,EAAEJ,IAAIkI,MAAM,KAFbC,EAAA3E,OAAA4E,EAAA,EAAA5E,CAAAyE,EAAA,GAEhBI,EAFgBF,EAAA,GAEVG,EAFUH,EAAA,GAGrB9H,EAAErB,MAAQuJ,SAASF,GAAQE,SAASD,GACpCjI,EAAEqH,GAAKc,KAAKC,IAAIrI,EAAEnB,QAAUoJ,GAC5BhI,EAAEsH,IAAMa,KAAKC,IAAIrI,EAAElB,SAAWoJ,GAC3BlI,EAAEpB,QAAUqB,EAAErB,QAEfyI,EAAQC,GAAKc,KAAKE,IAAIjB,EAAQC,GAAIrH,EAAEqH,IACpCD,EAAQE,IAAMa,KAAKE,IAAIjB,EAAQE,IAAKtH,EAAEsH,MAExCgB,QAAQC,IAAIvI,EAAEV,KAAMU,EAAEqH,GAAIrH,EAAEsH,IAAKvH,EAAEJ,GAAII,EAAExB,OAdC,MAAA8H,GAAAmB,GAAA,EAAAC,EAAApB,EAAA,YAAAkB,GAAA,MAAAI,EAAArB,QAAAqB,EAAArB,SAAA,WAAAkB,EAAA,MAAAC,GAAA,IAAAe,GAAA,EAAAC,GAAA,EAAAC,OAAA1F,EAAA,IAgB5C,QAAA2F,EAAAC,EAAcnJ,EAAduG,OAAAC,cAAAuC,GAAAG,EAAAC,EAAA/E,QAAAqC,MAAAsC,GAAA,EAAuB,KAAdxI,EAAc2I,EAAAxC,MACjB0C,GAAqB,EACrB7I,EAAErB,QAAUoB,EAAEpB,QAChBkK,GAAqB,EACrB9I,EAAE6G,cAAckC,KAAK9I,EAAEV,MACvBU,EAAEoG,WAAWrG,EAAEJ,OAEbkJ,GAAsB7I,EAAEqH,KAAOD,EAAQC,KACzCtH,EAAE8G,UAAUiC,KAAK9I,EAAEV,MACnBU,EAAEoG,WAAWrG,EAAEJ,OAEbkJ,GAAsB7I,EAAEsH,MAAQF,EAAQE,MAC1CvH,EAAE+G,WAAWgC,KAAK9I,EAAEV,MACpBU,EAAEoG,WAAWrG,EAAEJ,OAEjBK,EAAET,YAAcS,EAAEoG,WAAWrG,EAAEJ,KA/BW,MAAA0G,GAAAoC,GAAA,EAAAC,EAAArC,EAAA,YAAAmC,GAAA,MAAAI,EAAAtC,QAAAsC,EAAAtC,SAAA,WAAAmC,EAAA,MAAAC,KAfhB,MAAArC,GAAAW,GAAA,EAAAC,EAAAZ,EAAA,YAAAU,GAAA,MAAAI,EAAAb,QAAAa,EAAAb,SAAA,WAAAU,EAAA,MAAAC,GAiD9B,OAAO9D,OAAA4F,EAAA,EAAA5F,CAAA,GAAKrC,EAAZ,CAAmBO,QAAS,CAAEC,SAAQ7B,cCnFzBuJ,cAAgB,CAAEjI,OCClB,WAGb,IAFAD,EAEAyD,UAAA7B,OAAA,QAAAM,IAAAuB,UAAA,GAAAA,UAAA,GAFQ,CAAEjD,OAAQ,GAAIY,SAAS,GAC/B+G,EACA1E,UAAA7B,OAAA,EAAA6B,UAAA,QAAAvB,EACA,OAAQiG,EAAOnF,MACb,KAAKnB,EACH,MAAO,CAAET,SAAS,GACpB,KAAKU,EACH,MAAO,CAAEtB,OAAQ2H,EAAO3H,OAAQY,SAAS,GAC3C,KAAKW,EACH,MAAO,CAAEX,SAAS,EAAOgC,MAAO+E,EAAO/E,OACzC,QACE,OAAOpD,IDb4BE,QEH1B,WAAwE,IAAhDF,EAAgDyD,UAAA7B,OAAA,QAAAM,IAAAuB,UAAA,GAAAA,UAAA,GAAxC,CAAE9E,QAAQ,GAAIyC,SAAS,GAAS+G,EAAQ1E,UAAA7B,OAAA,EAAA6B,UAAA,QAAAvB,EACrF,OAAQiG,EAAOnF,MACb,KAAKhB,EACH,MAAO,CAACZ,SAAQ,GAClB,KAAKa,EACH,MAAO,CAACtD,QAASwJ,EAAOxJ,QAASyC,SAAQ,GAC3C,QACE,OAAOpB,IFJqCG,QDEnC,WAOb,IANAH,EAMAyD,UAAA7B,OAAA,QAAAM,IAAAuB,UAAA,GAAAA,UAAA,GANQ,CACNkB,gBAAgB,EAChBpE,QAAS,CAAEC,OAAQ,GAAI7B,QAAS,IAChCiG,eAAe,GAEjBuD,EACA1E,UAAA7B,OAAA,EAAA6B,UAAA,QAAAvB,EACA,OAAQiG,EAAOnF,MACb,KAAKhB,EACH,OAAOK,OAAA4F,EAAA,EAAA5F,CAAA,GAAKrC,EAAZ,CAAmB2E,gBAAgB,IACrC,KAAK9C,EACH,OAAOQ,OAAA4F,EAAA,EAAA5F,CAAA,GAAKrC,EAAZ,CAAmB4E,eAAe,IACpC,KAAK9C,EAMH,OALA9B,EAAKqC,OAAA4F,EAAA,EAAA5F,CAAA,GACArC,EADA,CAEHQ,OAAQ2H,EAAO3H,OACfoE,eAAe,IAEVF,EAAe1E,EAAOmI,GAC/B,KAAKlG,EAMH,OALAjC,EAAKqC,OAAA4F,EAAA,EAAA5F,CAAA,GACArC,EADA,CAEHrB,QAASwJ,EAAOxJ,QAChBgG,gBAAgB,IAEXD,EAAe1E,EAAOmI,GAC/B,QACE,OAAOnI,MI/BPoI,EAAe,GCIrBC,IAAS/D,OAAOlH,EAAAC,EAAAC,cAACgL,EAAA,EAAD,CAAUC,MDDjBC,YAAYC,EAAaL,EAAcM,YAAgBC,OCCbvL,EAAAC,EAAAC,cAACsL,EAAD,OAAoB/H,SAASC,eAAe,SNyHzF,kBAAmB+H,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.c27c349e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction GameCard({ game }) {\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"title\">\r\n        <strong>\r\n          OU\r\n          {game.home ? \" vs \" : \" @ \"}\r\n          {game.team}\r\n        </strong>\r\n      </div>\r\n      <div>{game.date}</div>\r\n      {\r\n        game.complete ? \r\n        (\r\n          <>\r\n            <div>OU {game.ouWon ? \"won\" : \"lost\"}</div>\r\n            <div>\r\n              {game.ouScore} to {game.oppScore}\r\n            </div>\r\n          </>\r\n        ) \r\n        : \r\n        (\r\n          <>\r\n          <br></br>\r\n          <br></br>\r\n          </>\r\n        )\r\n      }\r\n    <button class=\"smallButton button1\" onClick={() =>\r\n        window.open(\r\n          \"https://www.espn.com/college-football/game/_/gameId/\" +\r\n            game.espnGameId\r\n        )\r\n      }>ESPN</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameCard;\r\n\r\n//urls\r\n//Houston: https://www.espn.com/college-football/game/_/gameId/401112114\r\n//SDAK: https://www.espn.com/college-football/game/_/gameId/401112115\r\n//UCLA: https://www.espn.com/college-football/game/_/gameId/401112116\r\n//TTU: https://www.espn.com/college-football/game/_/gameId/401112117\r\n//KU: https://www.espn.com/college-football/game/_/gameId/401112101\r\n//TEX: https://www.espn.com/college-football/game/_/gameId/401112118\r\n//WVU: https://www.espn.com/college-football/game/_/gameId/401112119\r\n//KSU: https://www.espn.com/college-football/game/_/gameId/401112110\r\n//ISU: https://www.espn.com/college-football/game/_/gameId/401112092\r\n//BAY: https://www.espn.com/college-football/game/_/gameId/401112082\r\n//TCU: https://www.espn.com/college-football/game/_/gameId/401112120\r\n//OKST: https://www.espn.com/college-football/game/_/gameId/401112121\r\n","import React from \"react\";\r\n\r\nfunction PlayerCard({ player, playerClicked }) {\r\n  return (\r\n    <div className=\"player\" onClick={() => playerClicked(player)}>\r\n      <div className=\"title\">\r\n        <strong>{player.name}</strong>\r\n      </div>\r\n      <div>\r\n        Points: \r\n        {player.totalScore}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\n\r\nexport default ({ players, games }) => (\r\n  <table id=\"scoresTable\" class=\"hidden\">\r\n    {GetTableHeaders(games)}\r\n    {GetPlayerPredictions(players)}\r\n  </table>\r\n);\r\n\r\nconst GetTableHeaders = games => (\r\n  <tr>\r\n    <th>Player</th>\r\n    {games.map(g => (\r\n      <th>{g.team}</th>\r\n    ))}\r\n  </tr>\r\n);\r\n\r\nconst GetPlayerPredictions = players =>\r\n  players.map(p => (\r\n    <tr>\r\n      <td>{p.name}</td>\r\n      <td>{p.houston}</td>\r\n      <td>{p.southDakota}</td>\r\n      <td>{p.ucla}</td>\r\n      <td>{p.texasTech}</td>\r\n      <td>{p.kansas}</td>\r\n      <td>{p.texas}</td>\r\n      <td>{p.westVirginia}</td>\r\n      <td>{p.kansasState}</td>\r\n      <td>{p.iowaState}</td>\r\n      <td>{p.baylor}</td>\r\n      <td>{p.tcu}</td>\r\n      <td>{p.osu}</td>\r\n    </tr>\r\n  ));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport GameCard from \"./GameCard\";\r\nimport PlayerCard from \"./PlayerCard\";\r\nimport PredictionsTable from \"./PredictionsTable\";\r\n\r\nfunction Home({ Outcome }) {\r\n  const playerClicked = player => {\r\n    alert(JSON.stringify(player));\r\n  };\r\n  return (\r\n    <div id=\"HomeDiv\">\r\n      <br></br>\r\n      <div id=\"GamesDiv\">\r\n        {Outcome.outcome.scores.map(game => (\r\n          <GameCard key={game.id} game={game}></GameCard>\r\n        ))}\r\n      </div>\r\n      <br></br>\r\n      <div id=\"PlayersDiv\">\r\n        {Outcome.outcome.players.map(player => (\r\n          <PlayerCard\r\n            playerClicked={playerClicked}\r\n            key={player.name}\r\n            player={player}\r\n          ></PlayerCard>\r\n        ))}\r\n      </div>\r\n      <br></br>\r\n      <button class=\"largeButton button2\" onClick={() => showHideScores()}>Show/Hide Scores</button>\r\n      <br></br>\r\n      <br></br>\r\n      <div id=\"ScoresDiv\">\r\n        <PredictionsTable players={Outcome.outcome.players} games={Outcome.outcome.scores}></PredictionsTable>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction showHideScores()\r\n{\r\n  var x = document.getElementById(\"scoresTable\");\r\n  if (x.classList.contains(\"hidden\")) {\r\n    x.classList.remove('hidden');\r\n  } else {\r\n    x.classList.add('hidden');\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players,\r\n  Outcome: state.Outcome\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Scores({Scores}){\r\n    return (<div>scores page<div>{JSON.stringify(Scores)}</div></div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Scores);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Players({Players}){\r\n\r\n  if(Players.loading) return (<div>Loading...</div>);\r\n\r\n  return (\r\n    <div>\r\n      {Players.players.map(p=>(\r\n        <div><Link to={\"/players/\"+p.name}>{p.name}</Link></div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Players);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Player({ Players, match }) {\r\n  if (Players.loading) return <div>Loading...</div>;\r\n\r\n  const playerName = match.params.name;\r\n  const player = Players.players.filter(\r\n    p => p.name.toLowerCase() === playerName.toLowerCase()\r\n  );\r\n  if (!player.length) {\r\n    return (\r\n      <div>\r\n        Could not find: {playerName}{\" \"}\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Hello {playerName}. Here are your scores: {JSON.stringify(player)}\r\n      <div>\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","export const START_LOAD_SCORES = \"START_LOAD_SCORES\";\r\nexport const SCORES_LOADED = \"SCORES_LOADED\";\r\nexport const SCORES_ERROR = \"SCORES_ERROR\";\r\n\r\nexport const START_LOAD_PLAYERS = \"START_LOAD_PLAYERS\";\r\nexport const PLAYERS_LOADED = \"PLAYERS_LOADED\";\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport HomeComponent from \"./Components/Home\";\r\nimport ScoresComponent from \"./Components/Scores\";\r\nimport PlayersComponent from \"./Components/Players\";\r\nimport PlayerComponent from \"./Components/Player\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadScoresAction } from \"./Actions/ScoresActions\";\r\nimport { LoadPlayersAction } from \"./Actions/PlayersActions\";\r\n\r\nfunction App({ LoadScores, LoadPlayers }) {\r\n  useEffect(() => {\r\n    LoadScores();\r\n    LoadPlayers();\r\n  }, [LoadScores, LoadPlayers]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <header className=\"App-header\">\r\n          <Link className=\"HeaderLink\" to=\"/\">\r\n            Mema Football Pool 2019\r\n          </Link>\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeComponent} />\r\n          <Route exact path=\"/players\" component={PlayersComponent} />\r\n          <Route exact path=\"/players/:name\" component={PlayerComponent} />\r\n          <Route exact path=\"/scores\" component={ScoresComponent} />\r\n          <Route\r\n            render={() => (\r\n              <div>\r\n                404\r\n                <div>\r\n                  <Link to=\"/\">Go Home</Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    LoadScores: () => dispatch(LoadScoresAction()),\r\n    LoadPlayers: () => dispatch(LoadPlayersAction())\r\n  };\r\n};\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { START_LOAD_SCORES, SCORES_LOADED, SCORES_ERROR } from \"./Types\";\r\n\r\nconst scoresURL = \"https://api.sheety.co/63dbeee0-3aa4-4e79-ac39-545ac3ee7b86\";\r\n\r\nexport const StartLoadScores = () => ({\r\n  type: START_LOAD_SCORES\r\n});\r\n\r\nexport const ScoresLoaded = scores => ({\r\n  type: SCORES_LOADED,\r\n  scores\r\n});\r\n\r\nexport const ScoresLoadingError = error => ({\r\n  type: SCORES_ERROR,\r\n  error\r\n});\r\n\r\nexport const LoadScoresAction = () => {\r\n  return async dispatch => {\r\n    dispatch(StartLoadScores());\r\n    try {\r\n      const response = await fetch(scoresURL);\r\n      const json = await response.json();\r\n      dispatch(ScoresLoaded(json));\r\n    } catch (error) {\r\n      dispatch(ScoresLoadingError(error));\r\n    }\r\n  };\r\n};\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"./Types\";\r\n\r\nconst scoresURL = 'https://api.sheety.co/d50d6864-69d7-46b3-b39d-a4ea29480254';\r\n\r\nexport const StartLoadPlayers = ()=>({\r\n    type:START_LOAD_PLAYERS,\r\n});\r\n\r\nexport const PlayersLoaded = players => ({\r\n    type:PLAYERS_LOADED,\r\n    players\r\n});\r\n\r\nexport const LoadPlayersAction = ()=>{\r\n    return async (dispatch) =>{\r\n        dispatch(StartLoadPlayers());\r\n        const response = await fetch(scoresURL);\r\n        const json = await response.json();\r\n        dispatch(PlayersLoaded(json));\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SCORES_LOADED,\r\n  PLAYERS_LOADED,\r\n  START_LOAD_PLAYERS,\r\n  START_LOAD_SCORES\r\n} from \"../Actions/Types\";\r\n\r\nexport default function OutcomeReducer(\r\n  state = {\r\n    loadingPlayers: false,\r\n    outcome: { scores: [], players: [] },\r\n    loadingScores: false\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return { ...state, loadingPlayers: true };\r\n    case START_LOAD_SCORES:\r\n      return { ...state, loadingScores: true };\r\n    case SCORES_LOADED:\r\n      state = {\r\n        ...state,\r\n        scores: action.scores,\r\n        loadingScores: false\r\n      };\r\n      return computeIfReady(state, action);\r\n    case PLAYERS_LOADED:\r\n      state = {\r\n        ...state,\r\n        players: action.players,\r\n        loadingPlayers: false\r\n      };\r\n      return computeIfReady(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst computeIfReady = state => {\r\n  if (state.loadingPlayers || state.loadingScores) return state;\r\n\r\n  const { players, scores } = state;\r\n\r\n  for (let p of players) {\r\n    p.gameScores = {};\r\n    p.totalScore = 0;\r\n  }\r\n\r\n  for (let g of scores) {\r\n    g.guessedWinner = [];\r\n    g.closestOu = [];\r\n    g.closestOpp = [];\r\n  }\r\n  for (let g of scores.filter(g => g.complete)) {\r\n    let closest = { ou: 100, opp: 100 };\r\n    g.ouWon = g.ouScore > g.oppScore;\r\n    for (let p of players) {\r\n      p.gameScores[g.id] = 0;\r\n      let [p_ou, p_opp] = p[g.id].split(\"-\");\r\n      p.ouWon = parseInt(p_ou) > parseInt(p_opp);\r\n      p.ou = Math.abs(g.ouScore - p_ou);\r\n      p.opp = Math.abs(g.oppScore - p_opp);\r\n      if(g.ouWon === p.ouWon)\r\n      {\r\n        closest.ou = Math.min(closest.ou, p.ou);\r\n        closest.opp = Math.min(closest.opp, p.opp);\r\n      }\r\n      console.log(p.name, p.ou, p.opp, g.id, g.team);\r\n    }\r\n    for (let p of players) {\r\n      let eligibleForClosest = false;\r\n      if (p.ouWon === g.ouWon) {\r\n        eligibleForClosest = true;\r\n        g.guessedWinner.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.ou === closest.ou) {\r\n        g.closestOu.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.opp === closest.opp) {\r\n        g.closestOpp.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      p.totalScore += p.gameScores[g.id];\r\n    }\r\n  }\r\n  return { ...state, outcome: { scores, players } };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport Scores from \"./ScoresReducer\";\r\nimport Players from \"./PlayersReducer\";\r\nimport Outcome from \"./OutcomeReducer\";\r\n\r\nexport default combineReducers({ Scores, Players, Outcome });\r\n","import {\r\n  START_LOAD_SCORES,\r\n  SCORES_LOADED,\r\n  SCORES_ERROR\r\n} from \"../Actions/Types\";\r\n\r\nexport default function ScoresReducer(\r\n  state = { scores: [], loading: false },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_SCORES:\r\n      return { loading: true };\r\n    case SCORES_LOADED:\r\n      return { scores: action.scores, loading: false };\r\n    case SCORES_ERROR:\r\n      return { loading: false, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"../Actions/Types\";\r\n\r\nexport default function PlayersReducer(state = { players:[], loading: false }, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return {loading:true};\r\n    case PLAYERS_LOADED:\r\n      return {players: action.players, loading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers/RootReducer';\r\n\r\nconst initialState = {};\r\n\r\nexport default function configureStore() {\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./Store\"\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
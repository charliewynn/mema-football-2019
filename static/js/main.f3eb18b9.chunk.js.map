{"version":3,"sources":["Components/Game.js","Components/PlayerCard.js","Actions/Types.js","Components/Home.js","Components/Scores.js","Components/Players.js","Components/Player.js","App.js","Actions/ScoresActions.js","Actions/PlayersActions.js","serviceWorker.js","Reducers/OutcomeReducer.js","Reducers/RootReducer.js","Reducers/ScoresReducer.js","Reducers/PlayersReducer.js","Store.js","index.js"],"names":["Game","_ref","game","react_default","a","createElement","className","home","team","date","complete","Fragment","JSON","stringify","ouWon","ouScore","oppScore","guessedWinner","join","closestOu","closestOpp","PlayerCard","player","onClick","alert","name","totalScore","START_LOAD_SCORES","SCORES_LOADED","SCORES_ERROR","START_LOAD_PLAYERS","PLAYERS_LOADED","connect","state","Scores","Players","Outcome","id","outcome","scores","map","Components_Game","key","players","Components_PlayerCard","loading","p","react_router_dom","to","match","playerName","params","filter","toLowerCase","length","undefined","dispatch","LoadScores","Object","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","type","fetch","sent","t0","error","stop","_x","apply","this","arguments","LoadPlayers","useEffect","basename","process","react_router","exact","path","component","HomeComponent","PlayersComponent","PlayerComponent","ScoresComponent","render","Boolean","window","location","hostname","computeIfReady","loadingPlayers","loadingScores","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","gameScores","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","g","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","closest","ou","opp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_p$_g$id$split","split","_p$_g$id$split2","slicedToArray","p_ou","p_opp","parseInt","Math","abs","min","console","log","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","eligibleForClosest","push","objectSpread","combineReducers","action","initialState","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3eb18b9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Game({ game }) {\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"title\">\r\n        OU\r\n        {game.home ? \" vs \" : \" @ \"}\r\n        {game.team}\r\n      </div>\r\n      <div>{game.date}</div>\r\n      {game.complete && (\r\n        <>\r\n          <div>Did OU Win? {JSON.stringify(game.ouWon)}</div>\r\n          <div>\r\n            {game.ouScore} to {game.oppScore}\r\n          </div>\r\n          <div>Guessed Winner: {game.guessedWinner.join(\", \")}</div>\r\n          <div>Closest to OU score: {game.closestOu.join(\", \")}</div>\r\n          <div>Closest to Opp score: {game.closestOpp.join(\", \")}</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\n\r\nfunction PlayerCard({ player }) {\r\n  return (\r\n    <div className=\"player\" onClick={() => alert(\"View \" + player.name + \"'s Scores\")}>\r\n      <div className=\"title\">\r\n        {player.name}\r\n      </div>\r\n      <div>\r\n        Player Score: \r\n        {player.totalScore}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCard;\r\n","export const START_LOAD_SCORES = \"START_LOAD_SCORES\";\r\nexport const SCORES_LOADED = \"SCORES_LOADED\";\r\nexport const SCORES_ERROR = \"SCORES_ERROR\";\r\n\r\nexport const START_LOAD_PLAYERS = \"START_LOAD_PLAYERS\";\r\nexport const PLAYERS_LOADED = \"PLAYERS_LOADED\";\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Game from \"./Game\";\r\nimport PlayerCard from \"./PlayerCard\";\r\n\r\nimport { LoadScoresAction } from \"../Actions/ScoresActions\";\r\n\r\n\r\nfunction Home({ Outcome }) {\r\n  return (\r\n    <div id = \"HomeDiv\">\r\n      <div id = \"GamesDiv\">\r\n        {\r\n          Outcome.outcome.scores.map(game => (\r\n          <Game key={game.id} game={game}></Game>\r\n        ))}\r\n      </div>\r\n      <br></br>\r\n      <div id = \"PlayersDiv\">\r\n        {Outcome.outcome.players.map(player=> (\r\n          <PlayerCard key={player.name} player={player}></PlayerCard>\r\n        ))}\r\n      </div>\r\n      <br></br>\r\n      <div id = \"ScoresDiv\">\r\n      Click a Player to Display Predicted Scores\r\n        {/* {LoadScoresAction.LoadScoresAction()} */}\r\n        {/* <Link to=\"/scores\">Scores</Link> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players,\r\n  Outcome: state.Outcome\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Scores({Scores}){\r\n    return (<div>scores page<div>{JSON.stringify(Scores)}</div></div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Scores);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Players({Players}){\r\n\r\n  if(Players.loading) return (<div>Loading...</div>);\r\n\r\n  return (\r\n    <div>\r\n      {Players.players.map(p=>(\r\n        <div><Link to={\"/players/\"+p.name}>{p.name}</Link></div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Players);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Player({ Players, match }) {\r\n  if (Players.loading) return <div>Loading...</div>;\r\n\r\n  const playerName = match.params.name;\r\n  const player = Players.players.filter(\r\n    p => p.name.toLowerCase() === playerName.toLowerCase()\r\n  );\r\n  if (!player.length) {\r\n    return (\r\n      <div>\r\n        Could not find: {playerName}{\" \"}\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Hello {playerName}. Here are your scores: {JSON.stringify(player)}\r\n      <div>\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport HomeComponent from \"./Components/Home\";\r\nimport ScoresComponent from \"./Components/Scores\";\r\nimport PlayersComponent from \"./Components/Players\";\r\nimport PlayerComponent from \"./Components/Player\";\r\nimport { connect } from \"react-redux\";\r\nimport { LoadScoresAction } from \"./Actions/ScoresActions\";\r\nimport { LoadPlayersAction } from \"./Actions/PlayersActions\";\r\n\r\nfunction App({ LoadScores, LoadPlayers }) {\r\n  useEffect(() => {\r\n    LoadScores();\r\n    LoadPlayers();\r\n  }, [LoadScores, LoadPlayers]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <header className=\"App-header\">\r\n          <Link className=\"HeaderLink\" to=\"/\">\r\n            Mema Football Pool 2019\r\n          </Link>\r\n        </header>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeComponent} />\r\n          <Route exact path=\"/players\" component={PlayersComponent} />\r\n          <Route exact path=\"/players/:name\" component={PlayerComponent} />\r\n          <Route exact path=\"/scores\" component={ScoresComponent} />\r\n          <Route\r\n            render={() => (\r\n              <div>\r\n                404\r\n                <div>\r\n                  <Link to=\"/\">Go Home</Link>\r\n                </div>\r\n              </div>\r\n            )}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    LoadScores: () => dispatch(LoadScoresAction()),\r\n    LoadPlayers: () => dispatch(LoadPlayersAction())\r\n  };\r\n};\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(App);\r\n","import { START_LOAD_SCORES, SCORES_LOADED, SCORES_ERROR } from \"./Types\";\r\n\r\nconst scoresURL = \"https://api.sheety.co/63dbeee0-3aa4-4e79-ac39-545ac3ee7b86\";\r\n\r\nexport const StartLoadScores = () => ({\r\n  type: START_LOAD_SCORES\r\n});\r\n\r\nexport const ScoresLoaded = scores => ({\r\n  type: SCORES_LOADED,\r\n  scores\r\n});\r\n\r\nexport const ScoresLoadingError = error => ({\r\n  type: SCORES_ERROR,\r\n  error\r\n});\r\n\r\nexport const LoadScoresAction = () => {\r\n  return async dispatch => {\r\n    dispatch(StartLoadScores());\r\n    try {\r\n      const response = await fetch(scoresURL);\r\n      const json = await response.json();\r\n      dispatch(ScoresLoaded(json));\r\n    } catch (error) {\r\n      dispatch(ScoresLoadingError(error));\r\n    }\r\n  };\r\n};\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"./Types\";\r\n\r\nconst scoresURL = 'https://api.sheety.co/d50d6864-69d7-46b3-b39d-a4ea29480254';\r\n\r\nexport const StartLoadPlayers = ()=>({\r\n    type:START_LOAD_PLAYERS,\r\n});\r\n\r\nexport const PlayersLoaded = players => ({\r\n    type:PLAYERS_LOADED,\r\n    players\r\n});\r\n\r\nexport const LoadPlayersAction = ()=>{\r\n    return async (dispatch) =>{\r\n        dispatch(StartLoadPlayers());\r\n        const response = await fetch(scoresURL);\r\n        const json = await response.json();\r\n        dispatch(PlayersLoaded(json));\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  SCORES_LOADED,\r\n  PLAYERS_LOADED,\r\n  START_LOAD_PLAYERS,\r\n  START_LOAD_SCORES\r\n} from \"../Actions/Types\";\r\n\r\nexport default function OutcomeReducer(\r\n  state = {\r\n    loadingPlayers: false,\r\n    outcome: { scores: [], players: [] },\r\n    loadingScores: false\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return { ...state, loadingPlayers: true };\r\n    case START_LOAD_SCORES:\r\n      return { ...state, loadingScores: true };\r\n    case SCORES_LOADED:\r\n      state = {\r\n        ...state,\r\n        scores: action.scores,\r\n        loadingScores: false\r\n      };\r\n      return computeIfReady(state, action);\r\n    case PLAYERS_LOADED:\r\n      state = {\r\n        ...state,\r\n        players: action.players,\r\n        loadingPlayers: false\r\n      };\r\n      return computeIfReady(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst computeIfReady = state => {\r\n  if (state.loadingPlayers || state.loadingScores) return state;\r\n\r\n  const { players, scores } = state;\r\n\r\n  for (let p of players) {\r\n    p.gameScores = {};\r\n    p.totalScore = 0;\r\n  }\r\n\r\n  for (let g of scores) {\r\n    g.guessedWinner = [];\r\n    g.closestOu = [];\r\n    g.closestOpp = [];\r\n  }\r\n  for (let g of scores.filter(g => g.complete)) {\r\n    let closest = { ou: 100, opp: 100 };\r\n    g.ouWon = g.ouScore > g.oppScore;\r\n    for (let p of players) {\r\n      p.gameScores[g.id] = 0;\r\n      let [p_ou, p_opp] = p[g.id].split(\"-\");\r\n      p.ouWon = parseInt(p_ou) > parseInt(p_opp);\r\n      p.ou = Math.abs(g.ouScore - p_ou);\r\n      p.opp = Math.abs(g.oppScore - p_opp);\r\n      if(g.ouWon === p.ouWon)\r\n      {\r\n        closest.ou = Math.min(closest.ou, p.ou);\r\n        closest.opp = Math.min(closest.opp, p.opp);\r\n      }\r\n      console.log(p.name, p.ou, p.opp, g.id, g.team);\r\n    }\r\n    for (let p of players) {\r\n      let eligibleForClosest = false;\r\n      if (p.ouWon === g.ouWon) {\r\n        eligibleForClosest = true;\r\n        g.guessedWinner.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.ou === closest.ou) {\r\n        g.closestOu.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.opp === closest.opp) {\r\n        g.closestOpp.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      p.totalScore += p.gameScores[g.id];\r\n    }\r\n  }\r\n  return { ...state, outcome: { scores, players } };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport Scores from \"./ScoresReducer\";\r\nimport Players from \"./PlayersReducer\";\r\nimport Outcome from \"./OutcomeReducer\";\r\n\r\nexport default combineReducers({ Scores, Players, Outcome });\r\n","import {\r\n  START_LOAD_SCORES,\r\n  SCORES_LOADED,\r\n  SCORES_ERROR\r\n} from \"../Actions/Types\";\r\n\r\nexport default function ScoresReducer(\r\n  state = { scores: [], loading: false },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_SCORES:\r\n      return { loading: true };\r\n    case SCORES_LOADED:\r\n      return { scores: action.scores, loading: false };\r\n    case SCORES_ERROR:\r\n      return { loading: false, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"../Actions/Types\";\r\n\r\nexport default function PlayersReducer(state = { players:[], loading: false }, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return {loading:true};\r\n    case PLAYERS_LOADED:\r\n      return {players: action.players, loading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers/RootReducer';\r\n\r\nconst initialState = {};\r\n\r\nexport default function configureStore() {\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./Store\"\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
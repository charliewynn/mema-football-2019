{"version":3,"sources":["Components/GameCard.js","Components/PlayerCard.js","Components/PredictionsTable.js","Components/Home.js","Components/Scores.js","Components/Players.js","Components/Player.js","Actions/Types.js","App.js","Actions/ScoresActions.js","Actions/PlayersActions.js","serviceWorker.js","Reducers/OutcomeReducer.js","Reducers/RootReducer.js","Reducers/ScoresReducer.js","Reducers/PlayersReducer.js","Store.js","index.js"],"names":["GameCard","_ref","game","showBonusWinners","bonusWinnerText","changeSelectedGame","selected","react_default","a","createElement","className","onClick","home","team","date","complete","Fragment","ouWon","ouScore","oppScore","Object","toConsumableArray","Set","concat","closestOu","closestOpp","join","window","open","espnGameId","PlayerCard","player","playerClicked","guessedWinner","earnedBonusOU","earnedBonusOpp","selectedGameTeam","classes","points","name","totalScore","PredictionsTable","players","games","align","GetTableHeaders","GetPlayerPredictions","map","g","key","p","houston","southDakota","ucla","texasTech","kansas","texas","westVirginia","kansasState","iowaState","baylor","tcu","osu","connect","state","Scores","Players","Outcome","Config","debug","_useState","useState","showTable","_useState2","slicedToArray","showScoresTable","showHideScores","_useState3","_useState4","selectedGame","alert","JSON","stringify","id","announcement","outcome","scores","Components_GameCard","Components_PlayerCard","includes","loading","react_router_dom","to","match","playerName","params","filter","toLowerCase","length","START_LOAD_SCORES","SCORES_LOADED","SCORES_ERROR","START_LOAD_PLAYERS","PLAYERS_LOADED","undefined","dispatch","LoadScores","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","type","fetch","sent","t0","error","stop","_x","apply","this","arguments","LoadPlayers","useEffect","basename","process","react_router","exact","path","component","HomeComponent","PlayersComponent","PlayerComponent","ScoresComponent","render","Boolean","location","hostname","computeIfReady","loadingPlayers","loadingScores","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","gameScores","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","closest","ou","opp","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_p$_g$id$split","split","_p$_g$id$split2","p_ou","p_opp","parseInt","Math","abs","min","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","eligibleForClosest","push","objectSpread","combineReducers","action","initialState","configureStore","config","createStore","rootReducer","applyMiddleware","thunk","then","resp","urlParams","URLSearchParams","search","has","console","log","ReactDOM","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3c9e191.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction GameCard({\r\n  game,\r\n  showBonusWinners,\r\n  bonusWinnerText,\r\n  changeSelectedGame,\r\n  selected\r\n}) {\r\n  return (\r\n    <div\r\n      className={(selected ? \"selected \" : \"\") + \"game\"}\r\n      onClick={() => changeSelectedGame(game)}\r\n    >\r\n      <div className=\"title\">\r\n        <strong>\r\n          OU\r\n          {game.home ? \" vs \" : \" @ \"}\r\n          {game.team}\r\n        </strong>\r\n      </div>\r\n      <div>{game.date}</div>\r\n      {game.complete && (\r\n        <>\r\n          <div>OU {game.ouWon ? \"won\" : \"lost\"}</div>\r\n          <div>\r\n            {game.ouScore} to {game.oppScore}\r\n          </div>\r\n          {showBonusWinners && (\r\n            <div>\r\n              {bonusWinnerText}\r\n              {[...new Set([...game.closestOu, ...game.closestOpp])].join(\" \")}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      <button\r\n        className=\"smallButton button1\"\r\n        onClick={() =>\r\n          window.open(\r\n            \"https://www.espn.com/college-football/game/_/gameId/\" +\r\n              game.espnGameId\r\n          )\r\n        }\r\n      >\r\n        ESPN\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameCard;\r\n\r\n//urls\r\n//Houston: https://www.espn.com/college-football/game/_/gameId/401112114\r\n//SDAK: https://www.espn.com/college-football/game/_/gameId/401112115\r\n//UCLA: https://www.espn.com/college-football/game/_/gameId/401112116\r\n//TTU: https://www.espn.com/college-football/game/_/gameId/401112117\r\n//KU: https://www.espn.com/college-football/game/_/gameId/401112101\r\n//TEX: https://www.espn.com/college-football/game/_/gameId/401112118\r\n//WVU: https://www.espn.com/college-football/game/_/gameId/401112119\r\n//KSU: https://www.espn.com/college-football/game/_/gameId/401112110\r\n//ISU: https://www.espn.com/college-football/game/_/gameId/401112092\r\n//BAY: https://www.espn.com/college-football/game/_/gameId/401112082\r\n//TCU: https://www.espn.com/college-football/game/_/gameId/401112120\r\n//OKST: https://www.espn.com/college-football/game/_/gameId/401112121\r\n","import React from \"react\";\r\n\r\nfunction PlayerCard({\r\n  player,\r\n  playerClicked,\r\n  guessedWinner,\r\n  earnedBonusOU,\r\n  earnedBonusOpp,\r\n  selectedGameTeam\r\n}) {\r\n  let classes = \"player\";\r\n  let points = 0;\r\n  if (guessedWinner) {\r\n    classes += \" guessedWinner\";\r\n    points++;\r\n  }\r\n  if (earnedBonusOU) {\r\n    classes += \" earnedBonus\";\r\n    points++;\r\n  }\r\n  if (earnedBonusOpp) {\r\n    classes += \" earnedBonus\";\r\n    points++;\r\n  }\r\n  return (\r\n    <div className={classes} onClick={() => playerClicked(player)}>\r\n      <div className=\"title\">\r\n        <strong>{player.name}</strong>\r\n      </div>\r\n      <div>\r\n        Total Points:\r\n        {player.totalScore}\r\n      </div>\r\n      {selectedGameTeam && points ? (\r\n        <div>\r\n          {points} for OU vs {selectedGameTeam}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCard;\r\n","import React from \"react\";\r\n\r\nexport default ({ players, games }) => (\r\n  <table align=\"center\">\r\n    <thead>{GetTableHeaders(games)}</thead>\r\n    <tbody>{GetPlayerPredictions(players)}</tbody>\r\n  </table>\r\n);\r\n\r\nconst GetTableHeaders = games => (\r\n  <tr>\r\n    <th>Player</th>\r\n    {games.map(g => (\r\n      <th key={g.team}>{g.team}</th>\r\n    ))}\r\n  </tr>\r\n);\r\n\r\nconst GetPlayerPredictions = players =>\r\n  players.map(p => (\r\n    <tr key={p.name}>\r\n      <td>{p.name}</td>\r\n      <td>{p.houston}</td>\r\n      <td>{p.southDakota}</td>\r\n      <td>{p.ucla}</td>\r\n      <td>{p.texasTech}</td>\r\n      <td>{p.kansas}</td>\r\n      <td>{p.texas}</td>\r\n      <td>{p.westVirginia}</td>\r\n      <td>{p.kansasState}</td>\r\n      <td>{p.iowaState}</td>\r\n      <td>{p.baylor}</td>\r\n      <td>{p.tcu}</td>\r\n      <td>{p.osu}</td>\r\n    </tr>\r\n  ));\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport GameCard from \"./GameCard\";\r\nimport PlayerCard from \"./PlayerCard\";\r\nimport PredictionsTable from \"./PredictionsTable\";\r\n\r\nfunction Home({ Outcome, Config }) {\r\n  if (Config.debug) {\r\n    //console.log(\"Loading Home in debug mode\");\r\n  }\r\n  const [showScoresTable, showHideScores] = useState(Config.showTable);\r\n  const [selectedGame, changeSelectedGame] = useState(null);\r\n\r\n  const playerClicked = player => {\r\n    alert(JSON.stringify(player));\r\n  };\r\n  return (\r\n    <div id=\"HomeDiv\">\r\n      <h1>{Config.announcement}</h1>\r\n      <div id=\"GamesDiv\">\r\n        {Outcome.outcome.scores.map(game => (\r\n          <GameCard\r\n            selected={game === selectedGame}\r\n            key={game.id}\r\n            changeSelectedGame={changeSelectedGame}\r\n            bonusWinnerText={Config.bonusWinnerText}\r\n            showBonusWinners={Config.showBonusWinners}\r\n            game={game}\r\n          ></GameCard>\r\n        ))}\r\n      </div>\r\n      <div id=\"PlayersDiv\">\r\n        {Outcome.outcome.players.map(player => (\r\n          <PlayerCard\r\n            selectedGameTeam={selectedGame && selectedGame.team}\r\n            guessedWinner={\r\n              selectedGame && selectedGame.guessedWinner.includes(player.name)\r\n            }\r\n            earnedBonusOpp={\r\n              selectedGame && selectedGame.closestOpp.includes(player.name)\r\n            }\r\n            earnedBonusOU={\r\n              selectedGame && selectedGame.closestOu.includes(player.name)\r\n            }\r\n            playerClicked={playerClicked}\r\n            key={player.name}\r\n            player={player}\r\n          ></PlayerCard>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"largeButton button2\"\r\n        onClick={() => showHideScores(!showScoresTable)}\r\n      >\r\n        {showScoresTable ? \"Hide\" : \"Show\"} Scores Table\r\n      </button>\r\n      {showScoresTable && (\r\n        <div id=\"ScoresDiv\">\r\n          <PredictionsTable\r\n            players={Outcome.outcome.players}\r\n            games={Outcome.outcome.scores}\r\n          ></PredictionsTable>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players,\r\n  Outcome: state.Outcome,\r\n  Config: state.Config\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Scores({Scores}){\r\n    return (<div>scores page<div>{JSON.stringify(Scores)}</div></div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Scores);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Players({Players}){\r\n\r\n  if(Players.loading) return (<div>Loading...</div>);\r\n\r\n  return (\r\n    <div>\r\n      {Players.players.map(p=>(\r\n        <div><Link to={\"/players/\"+p.name}>{p.name}</Link></div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Players);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Player({ Players, match }) {\r\n  if (Players.loading) return <div>Loading...</div>;\r\n\r\n  const playerName = match.params.name;\r\n  const player = Players.players.filter(\r\n    p => p.name.toLowerCase() === playerName.toLowerCase()\r\n  );\r\n  if (!player.length) {\r\n    return (\r\n      <div>\r\n        Could not find: {playerName}{\" \"}\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Hello {playerName}. Here are your scores: {JSON.stringify(player)}\r\n      <div>\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","export const START_LOAD_SCORES = \"START_LOAD_SCORES\";\r\nexport const SCORES_LOADED = \"SCORES_LOADED\";\r\nexport const SCORES_ERROR = \"SCORES_ERROR\";\r\n\r\nexport const START_LOAD_PLAYERS = \"START_LOAD_PLAYERS\";\r\nexport const PLAYERS_LOADED = \"PLAYERS_LOADED\";\r\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomeComponent from \"./Components/Home\";\nimport ScoresComponent from \"./Components/Scores\";\nimport PlayersComponent from \"./Components/Players\";\nimport PlayerComponent from \"./Components/Player\";\nimport { connect } from \"react-redux\";\nimport { LoadScoresAction } from \"./Actions/ScoresActions\";\nimport { LoadPlayersAction } from \"./Actions/PlayersActions\";\n\nfunction App({ LoadScores, LoadPlayers }) {\n  useEffect(() => {\n    LoadScores();\n    LoadPlayers();\n  }, [LoadScores, LoadPlayers]);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <header className=\"App-header\">\n          <Link className=\"HeaderLink\" to=\"/\">\n            Mema Football Pool 2019\n          </Link>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={HomeComponent} />\n          <Route exact path=\"/players\" component={PlayersComponent} />\n          <Route exact path=\"/players/:name\" component={PlayerComponent} />\n          <Route exact path=\"/scores\" component={ScoresComponent} />\n          <Route\n            render={() => (\n              <div>\n                404\n                <div>\n                  <Link to=\"/\">Go Home</Link>\n                </div>\n              </div>\n            )}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LoadScores: () => dispatch(LoadScoresAction()),\n    LoadPlayers: () => dispatch(LoadPlayersAction())\n  };\n};\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(App);\n","import { START_LOAD_SCORES, SCORES_LOADED, SCORES_ERROR } from \"./Types\";\r\n\r\nconst scoresURL = \"https://api.sheety.co/63dbeee0-3aa4-4e79-ac39-545ac3ee7b86\";\r\n\r\nexport const StartLoadScores = () => ({\r\n  type: START_LOAD_SCORES\r\n});\r\n\r\nexport const ScoresLoaded = scores => ({\r\n  type: SCORES_LOADED,\r\n  scores\r\n});\r\n\r\nexport const ScoresLoadingError = error => ({\r\n  type: SCORES_ERROR,\r\n  error\r\n});\r\n\r\nexport const LoadScoresAction = () => {\r\n  return async dispatch => {\r\n    dispatch(StartLoadScores());\r\n    try {\r\n      const response = await fetch(scoresURL);\r\n      const json = await response.json();\r\n      dispatch(ScoresLoaded(json));\r\n    } catch (error) {\r\n      dispatch(ScoresLoadingError(error));\r\n    }\r\n  };\r\n};\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"./Types\";\r\n\r\nconst scoresURL = 'https://api.sheety.co/d50d6864-69d7-46b3-b39d-a4ea29480254';\r\n\r\nexport const StartLoadPlayers = ()=>({\r\n    type:START_LOAD_PLAYERS,\r\n});\r\n\r\nexport const PlayersLoaded = players => ({\r\n    type:PLAYERS_LOADED,\r\n    players\r\n});\r\n\r\nexport const LoadPlayersAction = ()=>{\r\n    return async (dispatch) =>{\r\n        dispatch(StartLoadPlayers());\r\n        const response = await fetch(scoresURL);\r\n        const json = await response.json();\r\n        dispatch(PlayersLoaded(json));\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SCORES_LOADED,\r\n  PLAYERS_LOADED,\r\n  START_LOAD_PLAYERS,\r\n  START_LOAD_SCORES\r\n} from \"../Actions/Types\";\r\n\r\nexport default function OutcomeReducer(\r\n  state = {\r\n    loadingPlayers: false,\r\n    outcome: { scores: [], players: [] },\r\n    loadingScores: false\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return { ...state, loadingPlayers: true };\r\n    case START_LOAD_SCORES:\r\n      return { ...state, loadingScores: true };\r\n    case SCORES_LOADED:\r\n      state = {\r\n        ...state,\r\n        scores: action.scores,\r\n        loadingScores: false\r\n      };\r\n      return computeIfReady(state, action);\r\n    case PLAYERS_LOADED:\r\n      state = {\r\n        ...state,\r\n        players: action.players,\r\n        loadingPlayers: false\r\n      };\r\n      return computeIfReady(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst computeIfReady = state => {\r\n  if (state.loadingPlayers || state.loadingScores) return state;\r\n\r\n  const { players, scores } = state;\r\n\r\n  for (let p of players) {\r\n    p.gameScores = {};\r\n    p.totalScore = 0;\r\n  }\r\n\r\n  for (let g of scores) {\r\n    g.guessedWinner = [];\r\n    g.closestOu = [];\r\n    g.closestOpp = [];\r\n  }\r\n  for (let g of scores.filter(g => g.complete)) {\r\n    let closest = { ou: 100, opp: 100 };\r\n    g.ouWon = g.ouScore > g.oppScore;\r\n    for (let p of players) {\r\n      p.gameScores[g.id] = 0;\r\n      let [p_ou, p_opp] = p[g.id].split(\"-\");\r\n      p.ouWon = parseInt(p_ou) > parseInt(p_opp);\r\n      p.ou = Math.abs(g.ouScore - p_ou);\r\n      p.opp = Math.abs(g.oppScore - p_opp);\r\n      if (g.ouWon === p.ouWon) {\r\n        closest.ou = Math.min(closest.ou, p.ou);\r\n        closest.opp = Math.min(closest.opp, p.opp);\r\n      }\r\n      //console.log(p.name, p.ou, p.opp, g.id, g.team);\r\n    }\r\n    for (let p of players) {\r\n      let eligibleForClosest = false;\r\n      if (p.ouWon === g.ouWon) {\r\n        eligibleForClosest = true;\r\n        g.guessedWinner.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.ou === closest.ou) {\r\n        g.closestOu.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      if (eligibleForClosest && p.opp === closest.opp) {\r\n        g.closestOpp.push(p.name);\r\n        p.gameScores[g.id]++;\r\n      }\r\n      p.totalScore += p.gameScores[g.id];\r\n    }\r\n  }\r\n  return { ...state, outcome: { scores, players } };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport Scores from \"./ScoresReducer\";\r\nimport Players from \"./PlayersReducer\";\r\nimport Outcome from \"./OutcomeReducer\";\r\n\r\nconst Config = (state = {}) => state;\r\nexport default combineReducers({ Scores, Players, Outcome, Config });\r\n","import {\r\n  START_LOAD_SCORES,\r\n  SCORES_LOADED,\r\n  SCORES_ERROR\r\n} from \"../Actions/Types\";\r\n\r\nexport default function ScoresReducer(\r\n  state = { scores: [], loading: false },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case START_LOAD_SCORES:\r\n      return { loading: true };\r\n    case SCORES_LOADED:\r\n      return { scores: action.scores, loading: false };\r\n    case SCORES_ERROR:\r\n      return { loading: false, error: action.error };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"../Actions/Types\";\r\n\r\nexport default function PlayersReducer(state = { players:[], loading: false }, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return {loading:true};\r\n    case PLAYERS_LOADED:\r\n      return {players: action.players, loading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function configureStore(config) {\r\n  initialState.Config = config;\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport configureStore from \"./Store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst url = \"https://api.sheety.co/85d08bfc-d77b-42a5-9d36-50c7aef7dc35\";\r\n\r\nfetch(url)\r\n  .then(resp => resp.json())\r\n  .then(config => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const configIndex = urlParams.has(\"debug\") ? 1 : 0;\r\n\r\n    config = config[configIndex];\r\n    config.debug = urlParams.has(\"debug\");\r\n\r\n    console.log(config);\r\n    ReactDOM.render(\r\n      <Provider store={configureStore(config)}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  });\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
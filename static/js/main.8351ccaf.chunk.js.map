{"version":3,"sources":["Components/Home.js","Components/Scores.js","Components/Players.js","Components/Player.js","Actions/Types.js","App.js","Actions/ScoresActions.js","Actions/PlayersActions.js","serviceWorker.js","Reducers/RootReducer.js","Reducers/ScoresReducer.js","Reducers/PlayersReducer.js","Store.js","index.js"],"names":["connect","state","Scores","Players","_ref","react_default","a","createElement","react_router_dom","to","JSON","stringify","loading","players","map","p","name","match","playerName","params","player","filter","toLowerCase","length","START_LOAD_SCORES","SCORES_LOADED","START_LOAD_PLAYERS","PLAYERS_LOADED","ownProps","dispatch","LoadScores","Object","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","type","fetch","sent","scores","stop","_x","apply","this","arguments","LoadPlayers","useEffect","className","basename","process","react_router","exact","path","component","HomeComponent","PlayersComponent","PlayerComponent","ScoresComponent","render","Boolean","window","location","hostname","combineReducers","undefined","action","initialState","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8351ccaf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Home({ Scores }) {\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n      <div>\r\n        <Link to=\"/scores\">Scores</Link>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/players\">Players</Link>\r\n      </div>\r\n      {/*JSON.stringify(Scores)*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Scores({Scores}){\r\n\r\n    return (<div>scores page<div>{JSON.stringify(Scores)}</div></div>)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Scores);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Players({Players}){\r\n\r\n  if(Players.loading) return (<div>Loading...</div>);\r\n\r\n  return (\r\n    <div>\r\n      {Players.players.map(p=>(\r\n        <div><Link to={\"/players/\"+p.name}>{p.name}</Link></div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Players);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Player({ Players, match }) {\r\n  if (Players.loading) return <div>Loading...</div>;\r\n\r\n  const playerName = match.params.name;\r\n  const player = Players.players.filter(\r\n    p => p.name.toLowerCase() === playerName.toLowerCase()\r\n  );\r\n  if (!player.length) {\r\n    return (\r\n      <div>\r\n        Could not find: {playerName}{\" \"}\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Hello {playerName}. Here are your scores: {JSON.stringify(player)}\r\n      <div>\r\n        <Link to=\"/players\">Back to all Players</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  Scores: state.Scores,\r\n  Players: state.Players\r\n});\r\n\r\nexport default connect(mapStateToProps)(Player);\r\n","export const START_LOAD_SCORES = \"START_LOAD_SCORES\";\r\nexport const SCORES_LOADED = \"SCORES_LOADED\";\r\n\r\nexport const START_LOAD_PLAYERS = \"START_LOAD_PLAYERS\";\r\nexport const PLAYERS_LOADED = \"PLAYERS_LOADED\";","import React, {useEffect} from 'react';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\nimport './App.css';\nimport HomeComponent from './Components/Home';\nimport ScoresComponent from './Components/Scores';\nimport PlayersComponent from './Components/Players';\nimport PlayerComponent from './Components/Player';\nimport { connect } from 'react-redux';\nimport { LoadScoresAction } from \"./Actions/ScoresActions\";\nimport { LoadPlayersAction } from './Actions/PlayersActions';\n\nfunction App({LoadScores, LoadPlayers}) {\n  useEffect(()=>{\n    LoadScores();\n    LoadPlayers();\n  },[LoadScores, LoadPlayers]);\n  \n  return (\n\n    <div className=\"App\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <header className=\"App-header\">\n          <Link className=\"HeaderLink\" to=\"/\">Mema Football Pool 2019</Link>\n        </header>\n        <Switch>\n          <Route exact path=\"/\" component={HomeComponent}></Route>\n          <Route exact path=\"/players\" component={PlayersComponent}></Route>\n          <Route exact path=\"/players/:name\" component={PlayerComponent}></Route>\n          <Route exact path=\"/scores\" component={ScoresComponent}></Route>\n          <Route render={()=><div>404<div><Link to=\"/\">Go Home</Link></div></div>}></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state,ownProps) => ({\n  Scores: state.Scores,\n  Players: state.Players\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    LoadScores: () => dispatch(LoadScoresAction()),\n    LoadPlayers: () => dispatch(LoadPlayersAction()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { START_LOAD_SCORES, SCORES_LOADED } from \"./Types\";\r\n\r\nconst scoresURL = 'https://api.sheety.co/63dbeee0-3aa4-4e79-ac39-545ac3ee7b86';\r\n\r\nexport const StartLoadScores = ()=>({\r\n    type:START_LOAD_SCORES,\r\n});\r\n\r\nexport const ScoresLoaded = scores => ({\r\n    type:SCORES_LOADED,\r\n    scores\r\n});\r\n\r\nexport const LoadScoresAction = ()=>{\r\n    return async (dispatch) =>{\r\n        dispatch(StartLoadScores());\r\n        const response = await fetch(scoresURL);\r\n        const json = await response.json();\r\n        dispatch(ScoresLoaded(json));\r\n    }\r\n}","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"./Types\";\r\n\r\nconst scoresURL = 'https://api.sheety.co/d50d6864-69d7-46b3-b39d-a4ea29480254';\r\n\r\nexport const StartLoadPlayers = ()=>({\r\n    type:START_LOAD_PLAYERS,\r\n});\r\n\r\nexport const PlayersLoaded = players => ({\r\n    type:PLAYERS_LOADED,\r\n    players\r\n});\r\n\r\nexport const LoadPlayersAction = ()=>{\r\n    return async (dispatch) =>{\r\n        dispatch(StartLoadPlayers());\r\n        const response = await fetch(scoresURL);\r\n        const json = await response.json();\r\n        dispatch(PlayersLoaded(json));\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport Scores from \"./ScoresReducer\";\r\nimport Players from \"./PlayersReducer\";\r\n\r\nexport default combineReducers({ Scores, Players });\r\n","import { START_LOAD_SCORES, SCORES_LOADED } from '../Actions/Types';\r\n\r\nexport default function ScoresReducer(state = { scores:[], loading: false }, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_SCORES:\r\n      return {loading:true};\r\n    case SCORES_LOADED:\r\n      return {scores: action.scores, loading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { START_LOAD_PLAYERS, PLAYERS_LOADED } from \"../Actions/Types\";\r\n\r\nexport default function PlayersReducer(state = { players:[], loading: false }, action) {\r\n  switch (action.type) {\r\n    case START_LOAD_PLAYERS:\r\n      return {loading:true};\r\n    case PLAYERS_LOADED:\r\n      return {players: action.players, loading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './Reducers/RootReducer';\r\n\r\nconst initialState = {};\r\n\r\nexport default function configureStore() {\r\n  return createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./Store\"\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={configureStore()}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}